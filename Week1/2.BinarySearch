/*II. Given an already sorted array of positive integers, design an algorithm and implement it using a 
program to find whether given key element is present in the array or not. Also, find total number 
of comparisons for each input case. (Time Complexity = O(nlogn), where n is the size of input).*/

#include<iostream>
using namespace std;


void BinarySearch(int a[], int n, int key)
{
    int l=0, h=n-1, mid, count=0;

    while(l<=h)
    {
        count++;
        mid=(l+h)/2;

        if(a[mid]==key)
        {
            cout<<"Key found at location : " <<mid <<endl;
            break;
        }
        
        else if(a[mid]<key)
            l = mid+1;
        
        else if(a[mid]>key)
            h = mid-1;
            
    }

    cout<<"Total number of comparisions for each input are : " <<count <<endl;
    return;

}

int main()
{
    int t;
    cout<<"Enter test case limit : ";
    cin>>t;

    while (t--)
    {
        int n, key;
        cout<<"Enter array limit : ";
        cin>>n;

        int a[n];
        cout<<"Enter array elements in sorted order : ";
        for(int i=0; i<n; i++)
            cin>>a[i];

        cout<<"Enter key for searching : ";
        cin>>key;

        BinarySearch(a, n, key);
    }
    
    return 0;

}
