/*I. Given an unsorted array of integers, design an algorithm and implement it using a program to
sort an array of elements by dividing the array into two subarrays and combining these subarrays
after sorting each one of them. Your program should also find number of comparisons and
inversions during sorting the array.
Input Format: 
The first line contains number of test cases, T.
For each test case, there will be two input lines.
First line contains n (the size of array).
Second line contains space-separated integers describing array.
Output Format:
The output will have T number of lines. 
For each test case T, there will be three output lines.
First line will give the sorted array.
Second line will give total number of comparisons.
Third line will give total number of inversions required.*/

#include<iostream>
using namespace std;

int count=0;

int* Merge(int a[], int low, int mid, int high)
{
    int i,j,k=0;
    int b[high+1];
    i=low, j=(mid+1), k=low;

    while(i<=mid && j<=high)
    {
        if(a[i]<a[j])
            b[k++]=a[i++];
        else
            b[k++]=a[j++];
        
        count++;
    }

    for( ; i<=mid; i++)
        b[k++]=a[i];
    
    for( ; j<=high; j++)
        b[k++]=a[j];
    
    for(i=low; i<=high; i++)
        a[i]=b[i];

    return a;
}

int* mergeSort(int a[], int low, int high)
{
    if(low<high)
    {   
        int mid=(low+high)/2;
        mergeSort(a, low, mid);
        mergeSort(a, mid+1, high);
        Merge(a, low, mid, high);
    }

    return a;
}

int main()
{
    int t, key, inv_count=0;
    cout<<"Enter test case limit : ";
    cin>>t;
 
    while (t--)
    {
        int n;
        cout<<"Enter array limit : ";
        cin>>n;

        int a[n];
        cout<<"Enter array elements : ";
        for(int i=0; i<n; i++)
            cin>>a[i];

        for(int i=0; i<n; i++)
        {
            for(int j=i+1; j<n; j++)
            {
                if(a[i]>a[j])
                    inv_count++;
            }
        }

        cout<<"Total number of inversions are : " <<inv_count <<endl;

        int l=0, h=n-1;

        mergeSort(a, l, h);
        
        cout<<"Total number of comparisions are : " <<count <<endl;

        cout<<"Array in the sorted order is : ";
        for(int i=0; i<n; i++)
            cout<<a[i] <<" ";
    }
    
    return 0;

}
